[tool.poetry]
name = "otisweb"
version = "1.9.0"
description = "OTIS-WEB Course Management System"
authors = ["Evan Chen <evan@evanchen.cc>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/vEnhance/otis-web"

[tool.poetry.dependencies]
python = ">=3.10, <4.0"
Django = "^4.1.7"
PyMySQL = "^1.0.2"
Unidecode = "^1.2.0"
crispy-bootstrap5 = "^0.7"
django-allauth = "^0.52.0"
django-bootstrap-v5 = "^1.0.5"
django-braces = "^1.14.0"
django-crispy-forms = "^1.14.0"
django-debug-toolbar = "^3.2.1"
django-extensions = "^3.2.1"
django-hijack = "^3.2.6"
django-import-export = "^3.0.1"
django-markdownfield = "^0.10.0"
django-positions = "^0.6.0"
django-qr-code = "^3.0.0"
django-registration = "^3.2"
django-reversion = "^5.0.0"
django-sql-utils = "^0.6.1"
django-storages = {extras = ["google"], version = "^1.11.1"}
django-stubs = "^1.14.0"
django-stubs-ext = "^0.7.0"
mailchimp3 = "^3.0.15"
mysqlclient = "^2.1.1"
prettytable = "^3.4.1"
pyparsing = "^3.0.9"
python-dotenv = "^0.21.1"
setuptools = "^67.4.0"
stripe = "^5.2.0"
wheel = "^0.38.4"
wiki = {git = "https://github.com/django-wiki/django-wiki.git", rev = "7981d6d"}
bleach = {extras = ["css"], version=">=5,<6"} # manual until wiki 0.10 out

[tool.poetry.group.dev.dependencies]
# TODO: Faker: need to wait until https://github.com/joke2k/faker/pull/1662 resolves
Faker = "=15.1.1"
# TODO: update codespell once v2.3.0 is published
black = "^23.1.0"
codespell = "^2.2.2"
coverage = {extras = ["toml"], version = "^7.1.0"}
djlint = "^1.19.15"
factory-boy = "^3.2.0"
freezegun = "^1.1.0"
ipython = "^8.10.0"
isort = "^5.12.0"
jedi = "^0.18.0"
pdbpp = "^0.10.3"
pyflakes = "^3.0.1"
pyright = "^1.1.295"
tblib = "^1.7.0"
toml = "^0.10.2"
types-Markdown = "^3.4.2.5"
types-freezegun = "^1.1.2"
types-requests = "^2.28.11.14"
werkzeug = "^2.2.3"

[tool.coverage.report]
show_missing = true
skip_covered = true
skip_empty = true

[tool.coverage.run]
branch = true
command_line = "manage.py test"
omit = [
  "**/site-packages/**",
  "*/migrations/*",
  "evans_django_tools/**",
  "manage.py",
  "*/admin.py",
  "fixtures/gen-dummy-data.sh",
]

[tool.pyright]
enableTypeIgnoreComments = true
exclude = ["**/node_modules", "**/typings", "**/__pycache__", ".git", "venv", ".venv", "**/migrations", "**/tests.py"]
pythonPlatform = "Linux"
pythonVersion = "3.10"
typeCheckingMode = "basic"
useLibraryCodeForTypes = true

reportAssertAlwaysTrue = "error"
reportCallInDefaultInitializer = "warning"
reportConstantRedefinition = "none"
reportDuplicateImport = "error"
reportFunctionMemberAccess = "none"
reportGeneralTypeIssues = "error"
reportImplicitStringConcatenation = "none"
reportImportCycles = "none"
reportIncompatibleMethodOverride = "none"
reportIncompatibleVariableOverride = "none"
reportIncompleteStub = "none"
reportInvalidStringEscapeSequence = "error"
reportInvalidTypeVarUse = "warning"
reportMissingImports = "error"
reportMissingModuleSource = "warning"
reportMissingTypeArgument = false
reportMissingTypeStubs = false
reportOptionalCall = "error"
reportOptionalContextManager = "error"
reportOptionalIterable = "error"
reportOptionalMemberAccess = "error"
reportOptionalOperand = "error"
reportOptionalSubscript = "error"
reportOverlappingOverload = "error"
reportPrivateUsage = "error"
reportPropertyTypeMismatch = "error"
reportSelfClsParameterName = "warning"
reportTypedDictNotRequiredAccess = "warning"
reportUnboundVariable = "error"
reportUndefinedVariable = "error"
reportUnitializedInstanceVariable = "warning"
reportUnknownArgumentType = "none"
reportUnknownMemberType = "none"
reportUnknownParameterType = "error"
reportUnknownVariableType = "none"
reportUnnecessaryCast = "error"
reportUnnecessaryComparison = "error"
reportUnnecessaryIsInstance = "error"
reportUnsupportDunderAll = "warning"
reportUntypedBaseClass = "none"
reportUntypedClassDecorator = "none"
reportUntypedFunctionDecorator = "none"
reportUntypedNamedTuple = "error"
reportUnusedCallResult = "none"
reportUnusedClass = "error"
reportUnusedCoroutine = "error"
reportUnusedFunction = "error"
reportUnusedImport = "warning"
reportUnusedNamedTuple = "error"
reportUnusedVariable = "error"
reportWildcardImportFromLibrary = "warning"
strictDictionaryInference = false
strictListInference = false
strictParameterNoneValue = false
strictSetInference = false

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.codereviewdoctor]
disable = ["tall-model", "missing-related-name", "checking-settings-debug", "nullable-string-field"]

[tool.codespell]
skip = "roster/country_abbrevs.py,arch/migrations/0013_auto_20210603_2343.py,roster/migrations/0060_studentregistration_country.py"
count = ""
quiet-level = 3

[tool.djlint]
profile = "django"
indent = 2
ignore = "D018,H006,H013,H021"
format_css = true
format_js = true

[tool.isort]
profile = "black"
