[tool.poetry]
name = "otisweb"
version = "1.9.0"
description = "OTIS-WEB Course Management System"
authors = ["Evan Chen <evan@evanchen.cc>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/vEnhance/otis-web"

[tool.poetry.dependencies]
python = ">=3.8, <4.0"
Django = "^4.0.7"
PyMySQL = "^1.0.2"
Unidecode = "^1.2.0"
crispy-bootstrap5 = "^0.7"
django-allauth = "^0.51.0"
django-bootstrap-v5 = "^1.0.5"
django-braces = "^1.14.0"
django-crispy-forms = "^1.12.0"
django-debug-toolbar = "^3.2.1"
django-hijack = "^3.0.0"
django-import-export = "^2.5.0"
django-positions = "^0.6.0"
django-registration = "^3.2"
django-reversion = "^5.0.0"
django-sql-utils = "^0.6.1"
django-storages = {extras = ["google"], version = "^1.11.1"}
django-stubs = "^1.10.1"
django-stubs-ext = "^0.5.0"
django-qr-code = "^3.0.0"
mailchimp3 = "^3.0.15"
mysqlclient = "^2.1.1"
pyparsing = "^3.0.9"
python-dotenv = "^0.21.0"
setuptools = "^65.3.0"
stripe = "^4.0.2"
wheel = "^0.37.0"
wiki = "^0.9"

[tool.poetry.group.dev.dependencies]
Faker = "^15.0.0"
# TODO: update codespell once v2.3.0 is published
codespell = {git = "https://github.com/codespell-project/codespell.git", rev = "fd1d5c0"}
coverage = {extras = ["toml"], version = "^6.4.3"}
factory-boy = "^3.2.0"
freezegun = "^1.1.0"
ipython = "^8.4.0"
jedi = "^0.18.0"
pdbpp = "^0.10.3"
pyflakes = "^2.3.1"
pyright = "^1.1.274"
tblib = "^1.7.0"
toml = "^0.10.2"
types-Markdown = "^3.3.6"
types-freezegun = "^1.1.2"
types-requests = "^2.28.9"
yapf = "^0.32.0"

[tool.yapf]
based_on_style = "facebook"
column_limit = 96
use_tabs = true
continuation_align_style = "VALIGN-RIGHT"
continuation_indent_width = 2
indent_width = 2
align_closing_bracket_with_visual_indent = false
split_before_dot = true
split_before_expression_after_opening_paren = true

[tool.coverage.report]
show_missing = true
skip_covered = true
skip_empty = true

[tool.coverage.run]
branch = true
command_line = "manage.py test"
omit = [
	"*/site-packages/*",
	"*/migrations/*",
	"manage.py",
]

[tool.pyright]
enableTypeIgnoreComments = true
exclude = ["**/node_modules", "**/typings", "**/__pycache__", ".git", "venv", ".venv", "**/migrations", "**/tests.py"]
pythonPlatform = "Linux"
pythonVersion = "3.9"
typeCheckingMode = "basic"
useLibraryCodeForTypes = true

reportAssertAlwaysTrue = "error"
reportCallInDefaultInitializer = "warning"
reportConstantRedefinition = "none"
reportDuplicateImport = "error"
reportFunctionMemberAccess = "none"
reportGeneralTypeIssues = "error"
reportImplicitStringConcatenation = "none"
reportImportCycles = "none"
reportIncompatibleMethodOverride = "none"
reportIncompatibleVariableOverride = "none"
reportIncompleteStub = "none"
reportInvalidStringEscapeSequence = "error"
reportInvalidTypeVarUse = "warning"
reportMissingImports = "error"
reportMissingModuleSource = "warning"
reportMissingTypeArgument = false
reportMissingTypeStubs = false
reportOptionalCall = "error"
reportOptionalContextManager = "error"
reportOptionalIterable = "error"
reportOptionalMemberAccess = "error"
reportOptionalOperand = "error"
reportOptionalSubscript = "error"
reportOverlappingOverload = "error"
reportPrivateUsage = "error"
reportPropertyTypeMismatch = "error"
reportSelfClsParameterName = "warning"
reportTypedDictNotRequiredAccess = "warning"
reportUnboundVariable = "error"
reportUndefinedVariable = "error"
reportUnitializedInstanceVariable = "warning"
reportUnknownArgumentType = "none"
reportUnknownMemberType = "none"
reportUnknownParameterType = "error"
reportUnknownVariableType = "none"
reportUnnecessaryCast = "error"
reportUnnecessaryComparison = "error"
reportUnnecessaryIsInstance = "error"
reportUnsupportDunderAll = "warning"
reportUntypedBaseClass = "none"
reportUntypedClassDecorator = "none"
reportUntypedFunctionDecorator = "warning"
reportUntypedNamedTuple = "error"
reportUnusedCallResult = "none"
reportUnusedClass = "error"
reportUnusedCoroutine = "error"
reportUnusedFunction = "error"
reportUnusedImport = "none"
reportUnusedNamedTuple = "error"
reportUnusedVariable = "error"
reportWildcardImportFromLibrary = "warning"
strictDictionaryInference = false
strictListInference = false
strictParameterNoneValue = false
strictSetInference = false

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.codereviewdoctor]
disable = ["tall-model", "missing-related-name", "checking-settings-debug", "nullable-string-field"]

[tool.codespell]
skip = "roster/country_abbrevs.py,arch/migrations/0013_auto_20210603_2343.py,roster/migrations/0060_studentregistration_country.py"
count = ""
quiet-level = 3
